# This workflow is responsible for validating Pull Requests (PRs)
# against specific quality and hygiene standards for the rsyslog project.
#
# It automatically runs a custom validation script to ensure PRs meet
# requirements like commit structure and count before merging.
name: PR Validation

# Triggers the workflow on pull request events.
# When 'types:' is not specified, the workflow defaults to triggering on:
# - 'opened': When a new pull request is created.
# - 'synchronize': When new commits are pushed to the PR branch.
# - 'reopened': When a previously closed PR is reopened.
# This covers the essential scenarios for validating PRs based on their
# content and commit history.
on:
  pull_request: # Defaults to opened, synchronize, reopened

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  validate-pr:
    runs-on: ubuntu-latest # 'ubuntu-latest' provides a virtual machine with the latest Ubuntu OS.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # 'fetch-depth: 0' is crucial here. It fetches the entire commit history
          # of the repository, not just the latest commit. This is necessary
          # for the PR_validation.sh script to accurately analyze commit counts,
          # commit messages, and ensure proper squashing.
          fetch-depth: 0

      - name: Run PR Validation Script
        run: ./tests/CI/PR_validation.sh
        # This script is responsible for implementing the specific validation logic,
        # such as:
        # - Checking if the PR's commits are squashed.
        # - Ensuring a maximum of two commits (one for change, one for testing commit).
        # - Any other custom rules defined by the rsyslog project.
        #
        # If the script exits with a non-zero status code, this step (and thus the job)
        # will fail, indicating that the PR does not meet the specified requirements.
